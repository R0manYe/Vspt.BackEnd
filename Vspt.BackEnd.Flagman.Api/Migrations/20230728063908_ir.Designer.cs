// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Vspt.BackEnd.Flagman.Infrastructure.Database;

#nullable disable

namespace Vspt.BackEnd.Flagman.Api.Migrations
{
    [DbContext(typeof(FlagmanContext))]
    [Migration("20230728063908_ir")]
    partial class ir
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("VSPTSVOD")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MassTransit.EntityFrameworkCoreIntegration.InboxState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Consumed")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("ConsumerId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("Delivered")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long?>("LastSequenceNumber")
                        .HasColumnType("NUMBER(19)");

                    b.Property<Guid>("LockId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("ReceiveCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Received")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)");

                    b.HasKey("Id");

                    b.HasAlternateKey("MessageId", "ConsumerId");

                    b.HasIndex("Delivered");

                    b.ToTable("InboxState", "VSPTSVOD");
                });

            modelBuilder.Entity("MassTransit.EntityFrameworkCoreIntegration.OutboxMessage", b =>
                {
                    b.Property<long>("SequenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SequenceNumber"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<Guid?>("ConversationId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("CorrelationId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("DestinationAddress")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<DateTime?>("EnqueueTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("FaultAddress")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("Headers")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid?>("InboxConsumerId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("InboxMessageId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("InitiatorId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("OutboxId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Properties")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid?>("RequestId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ResponseAddress")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("SourceAddress")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("SequenceNumber");

                    b.HasIndex("EnqueueTime");

                    b.HasIndex("ExpirationTime");

                    b.HasIndex("OutboxId", "SequenceNumber")
                        .IsUnique()
                        .HasFilter("\"OutboxId\" IS NOT NULL");

                    b.HasIndex("InboxMessageId", "InboxConsumerId", "SequenceNumber")
                        .IsUnique()
                        .HasFilter("\"InboxMessageId\" IS NOT NULL AND \"InboxConsumerId\" IS NOT NULL");

                    b.ToTable("OutboxMessage", "VSPTSVOD");
                });

            modelBuilder.Entity("MassTransit.EntityFrameworkCoreIntegration.OutboxState", b =>
                {
                    b.Property<Guid>("OutboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("Delivered")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long?>("LastSequenceNumber")
                        .HasColumnType("NUMBER(19)");

                    b.Property<Guid>("LockId")
                        .HasColumnType("RAW(16)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)");

                    b.HasKey("OutboxId");

                    b.HasIndex("Created");

                    b.ToTable("OutboxState", "VSPTSVOD");
                });

            modelBuilder.Entity("Vspt.BackEnd.Flagman.Domain.Entity.Dislokacia", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("DATE_DOSTAV")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("DATE_NACH")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("DATE_OP")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("DATE_PRIB")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("DOR_RASCH")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("GRUZPOL_OKPO")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("INDEX_POEZD")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_GRUZOTPR_OKPO")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_GRUZPOL_OKPO")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_KOD_GRZ")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_KOP_VMD")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_ROD_VAG")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_STAN_NAZN")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_STAN_OP")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NOM_POEZD")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NOM_VAG")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NPP_VAG")
                        .IsRequired()
                        .HasPrecision(3)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RASST_STAN_NAZN")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("STAN_NACH")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("STAN_NAZN")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Spr_Etran_RailwaysID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("VES_GRZ")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.HasIndex("Spr_Etran_RailwaysID");

                    b.ToTable("DISLOKACIA", "VSPTSVOD");
                });

            modelBuilder.Entity("Vspt.BackEnd.Flagman.Domain.Entity.GetAllDislokacia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("DATE_DOSTAV")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("DATE_OP")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("GRUZPOL_OKPO")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("INDEX_POEZD")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_GRUZOTPR_OKPO")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_GRUZPOL_OKPO")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_KOD_GRZ")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_KOP_VMD")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_ROD_VAG")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_STAN_NAZN")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM_STAN_OP")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NOM_POEZD")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NOM_VAG")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NPP_VAG")
                        .HasPrecision(3)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RAILWAYS")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RASST_STAN_NAZN")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("STAN_NAZN")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("VES_GRZ")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("GETALLDISLOKACIA", "VSPTSVOD");
                });

            modelBuilder.Entity("Vspt.BackEnd.Flagman.Domain.Entity.SPR_ETRAN_RAILWAYS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("SPR_ETRAN_RAILWAYS", "VSPTSVOD");
                });

            modelBuilder.Entity("Vspt.BackEnd.Flagman.Domain.Entity.Spr_collection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ID_SP")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ID_SPR")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NAIM")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SV")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.ToTable("SPR_COLLECTION", "VSPTSVOD");
                });

            modelBuilder.Entity("Vspt.BackEnd.Flagman.Domain.Entity.Vspt_subject_persone", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("BU")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("BU_ID")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DIV_ID")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DIV_NAME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FIRST_NAME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LAST_NAME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PROF")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PROF_ID")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("SECOND_NAME")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("VSPT_SUBJECT_PERSONE", "VSPTSVOD");
                });

            modelBuilder.Entity("Vspt.BackEnd.Flagman.Domain.Entity.Dislokacia", b =>
                {
                    b.HasOne("Vspt.BackEnd.Flagman.Domain.Entity.SPR_ETRAN_RAILWAYS", "Spr_Etran_Railways")
                        .WithMany()
                        .HasForeignKey("Spr_Etran_RailwaysID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spr_Etran_Railways");
                });
#pragma warning restore 612, 618
        }
    }
}
